Terminals which are not used

   AND
   OR


State 12 conflicts: 1 shift/reduce
State 36 conflicts: 10 shift/reduce
State 89 conflicts: 4 shift/reduce


Grammar

    0 $accept: program $end

    1 program: headers main '(' ')' '{' body return '}'

    2 main: datatype ID

    3 datatype: INT
    4         | FLOAT
    5         | CHAR
    6         | VOID

    7 headers: headers headers

    8 @1: /* empty */

    9 headers: INCLUDE @1

   10 condition: value relop value
   11          | TRUE
   12          | FALSE
   13          | /* empty */

   14 @2: /* empty */

   15 body: FOR @2 '(' statement ';' condition ';' statement ')' '{' body '}'

   16 @3: /* empty */

   17 @4: /* empty */

   18 @5: /* empty */

   19 body: IF @3 '(' condition ')' @4 '{' body '}' @5 else
   20     | statement ';'
   21     | body body

   22 @6: /* empty */

   23 body: SCANFF @6 '(' STR ',' '&' ID ')' ';'

   24 @7: /* empty */

   25 body: PRINTFF @7 '(' STR ')' ';'

   26 @8: /* empty */

   27 else: ELSE @8 '{' body '}'
   28     | /* empty */

   29 @9: /* empty */

   30 statement: datatype ID @9 init

   31 @10: /* empty */

   32 statement: ID @10 '=' expression

   33 @11: /* empty */

   34 statement: ID @11 relop expression

   35 @12: /* empty */

   36 statement: ID @12 UNARY
   37          | UNARY ID

   38 init: '=' value
   39     | /* empty */

   40 expression: expression arithmetic expression
   41           | value

   42 @13: /* empty */

   43 return: RETURN @13 value ';'
   44       | /* empty */

   45 relop: LT
   46      | GT
   47      | LE
   48      | GE
   49      | EQ
   50      | NE

   51 arithmetic: ADD
   52           | SUBTRACT
   53           | MULTIPLY
   54           | DIVIDE

   55 value: NUMBER
   56      | FLOAT_NUM
   57      | CHARACTER
   58      | ID


Terminals, with rules where they appear

$end (0) 0
'&' (38) 23
'(' (40) 1 15 19 23 25
')' (41) 1 15 19 23 25
',' (44) 23
';' (59) 15 20 23 25 43
'=' (61) 32 38
'{' (123) 1 15 19 27
'}' (125) 1 15 19 27
error (256)
VOID (258) 6
CHARACTER (259) 57
PRINTFF (260) 25
SCANFF (261) 23
INT (262) 3
FLOAT (263) 4
CHAR (264) 5
FOR (265) 15
IF (266) 19
ELSE (267) 27
TRUE (268) 11
FALSE (269) 12
NUMBER (270) 55
FLOAT_NUM (271) 56
ID (272) 2 23 30 32 34 36 37 58
LE (273) 47
GE (274) 48
EQ (275) 49
NE (276) 50
GT (277) 46
LT (278) 45
AND (279)
OR (280)
STR (281) 23 25
ADD (282) 51
MULTIPLY (283) 53
DIVIDE (284) 54
SUBTRACT (285) 52
UNARY (286) 36 37
INCLUDE (287) 9
RETURN (288) 43


Nonterminals, with rules where they appear

$accept (42)
    on left: 0
program (43)
    on left: 1, on right: 0
main (44)
    on left: 2, on right: 1
datatype (45)
    on left: 3 4 5 6, on right: 2 30
headers (46)
    on left: 7 9, on right: 1 7
@1 (47)
    on left: 8, on right: 9
condition (48)
    on left: 10 11 12 13, on right: 15 19
body (49)
    on left: 15 19 20 21 23 25, on right: 1 15 19 21 27
@2 (50)
    on left: 14, on right: 15
@3 (51)
    on left: 16, on right: 19
@4 (52)
    on left: 17, on right: 19
@5 (53)
    on left: 18, on right: 19
@6 (54)
    on left: 22, on right: 23
@7 (55)
    on left: 24, on right: 25
else (56)
    on left: 27 28, on right: 19
@8 (57)
    on left: 26, on right: 27
statement (58)
    on left: 30 32 34 36 37, on right: 15 20
@9 (59)
    on left: 29, on right: 30
@10 (60)
    on left: 31, on right: 32
@11 (61)
    on left: 33, on right: 34
@12 (62)
    on left: 35, on right: 36
init (63)
    on left: 38 39, on right: 30
expression (64)
    on left: 40 41, on right: 32 34 40
return (65)
    on left: 43 44, on right: 1
@13 (66)
    on left: 42, on right: 43
relop (67)
    on left: 45 46 47 48 49 50, on right: 10 34
arithmetic (68)
    on left: 51 52 53 54, on right: 40
value (69)
    on left: 55 56 57 58, on right: 10 38 41 43


state 0

    0 $accept: . program $end

    INCLUDE  shift, and go to state 1

    program  go to state 2
    headers  go to state 3


state 1

    9 headers: INCLUDE . @1

    $default  reduce using rule 8 (@1)

    @1  go to state 4


state 2

    0 $accept: program . $end

    $end  shift, and go to state 5


state 3

    1 program: headers . main '(' ')' '{' body return '}'
    7 headers: headers . headers

    VOID     shift, and go to state 6
    INT      shift, and go to state 7
    FLOAT    shift, and go to state 8
    CHAR     shift, and go to state 9
    INCLUDE  shift, and go to state 1

    main      go to state 10
    datatype  go to state 11
    headers   go to state 12


state 4

    9 headers: INCLUDE @1 .

    $default  reduce using rule 9 (headers)


state 5

    0 $accept: program $end .

    $default  accept


state 6

    6 datatype: VOID .

    $default  reduce using rule 6 (datatype)


state 7

    3 datatype: INT .

    $default  reduce using rule 3 (datatype)


state 8

    4 datatype: FLOAT .

    $default  reduce using rule 4 (datatype)


state 9

    5 datatype: CHAR .

    $default  reduce using rule 5 (datatype)


state 10

    1 program: headers main . '(' ')' '{' body return '}'

    '('  shift, and go to state 13


state 11

    2 main: datatype . ID

    ID  shift, and go to state 14


state 12

    7 headers: headers . headers
    7        | headers headers .

    INCLUDE  shift, and go to state 1

    INCLUDE   [reduce using rule 7 (headers)]
    $default  reduce using rule 7 (headers)

    headers  go to state 12


state 13

    1 program: headers main '(' . ')' '{' body return '}'

    ')'  shift, and go to state 15


state 14

    2 main: datatype ID .

    $default  reduce using rule 2 (main)


state 15

    1 program: headers main '(' ')' . '{' body return '}'

    '{'  shift, and go to state 16


state 16

    1 program: headers main '(' ')' '{' . body return '}'

    VOID     shift, and go to state 6
    PRINTFF  shift, and go to state 17
    SCANFF   shift, and go to state 18
    INT      shift, and go to state 7
    FLOAT    shift, and go to state 8
    CHAR     shift, and go to state 9
    FOR      shift, and go to state 19
    IF       shift, and go to state 20
    ID       shift, and go to state 21
    UNARY    shift, and go to state 22

    datatype   go to state 23
    body       go to state 24
    statement  go to state 25


state 17

   25 body: PRINTFF . @7 '(' STR ')' ';'

    $default  reduce using rule 24 (@7)

    @7  go to state 26


state 18

   23 body: SCANFF . @6 '(' STR ',' '&' ID ')' ';'

    $default  reduce using rule 22 (@6)

    @6  go to state 27


state 19

   15 body: FOR . @2 '(' statement ';' condition ';' statement ')' '{' body '}'

    $default  reduce using rule 14 (@2)

    @2  go to state 28


state 20

   19 body: IF . @3 '(' condition ')' @4 '{' body '}' @5 else

    $default  reduce using rule 16 (@3)

    @3  go to state 29


state 21

   32 statement: ID . @10 '=' expression
   34          | ID . @11 relop expression
   36          | ID . @12 UNARY

    UNARY     reduce using rule 35 (@12)
    '='       reduce using rule 31 (@10)
    $default  reduce using rule 33 (@11)

    @10  go to state 30
    @11  go to state 31
    @12  go to state 32


state 22

   37 statement: UNARY . ID

    ID  shift, and go to state 33


state 23

   30 statement: datatype . ID @9 init

    ID  shift, and go to state 34


state 24

    1 program: headers main '(' ')' '{' body . return '}'
   21 body: body . body

    VOID     shift, and go to state 6
    PRINTFF  shift, and go to state 17
    SCANFF   shift, and go to state 18
    INT      shift, and go to state 7
    FLOAT    shift, and go to state 8
    CHAR     shift, and go to state 9
    FOR      shift, and go to state 19
    IF       shift, and go to state 20
    ID       shift, and go to state 21
    UNARY    shift, and go to state 22
    RETURN   shift, and go to state 35

    $default  reduce using rule 44 (return)

    datatype   go to state 23
    body       go to state 36
    statement  go to state 25
    return     go to state 37


state 25

   20 body: statement . ';'

    ';'  shift, and go to state 38


state 26

   25 body: PRINTFF @7 . '(' STR ')' ';'

    '('  shift, and go to state 39


state 27

   23 body: SCANFF @6 . '(' STR ',' '&' ID ')' ';'

    '('  shift, and go to state 40


state 28

   15 body: FOR @2 . '(' statement ';' condition ';' statement ')' '{' body '}'

    '('  shift, and go to state 41


state 29

   19 body: IF @3 . '(' condition ')' @4 '{' body '}' @5 else

    '('  shift, and go to state 42


state 30

   32 statement: ID @10 . '=' expression

    '='  shift, and go to state 43


state 31

   34 statement: ID @11 . relop expression

    LE  shift, and go to state 44
    GE  shift, and go to state 45
    EQ  shift, and go to state 46
    NE  shift, and go to state 47
    GT  shift, and go to state 48
    LT  shift, and go to state 49

    relop  go to state 50


state 32

   36 statement: ID @12 . UNARY

    UNARY  shift, and go to state 51


state 33

   37 statement: UNARY ID .

    $default  reduce using rule 37 (statement)


state 34

   30 statement: datatype ID . @9 init

    $default  reduce using rule 29 (@9)

    @9  go to state 52


state 35

   43 return: RETURN . @13 value ';'

    $default  reduce using rule 42 (@13)

    @13  go to state 53


state 36

   21 body: body . body
   21     | body body .

    VOID     shift, and go to state 6
    PRINTFF  shift, and go to state 17
    SCANFF   shift, and go to state 18
    INT      shift, and go to state 7
    FLOAT    shift, and go to state 8
    CHAR     shift, and go to state 9
    FOR      shift, and go to state 19
    IF       shift, and go to state 20
    ID       shift, and go to state 21
    UNARY    shift, and go to state 22

    VOID      [reduce using rule 21 (body)]
    PRINTFF   [reduce using rule 21 (body)]
    SCANFF    [reduce using rule 21 (body)]
    INT       [reduce using rule 21 (body)]
    FLOAT     [reduce using rule 21 (body)]
    CHAR      [reduce using rule 21 (body)]
    FOR       [reduce using rule 21 (body)]
    IF        [reduce using rule 21 (body)]
    ID        [reduce using rule 21 (body)]
    UNARY     [reduce using rule 21 (body)]
    $default  reduce using rule 21 (body)

    datatype   go to state 23
    body       go to state 36
    statement  go to state 25


state 37

    1 program: headers main '(' ')' '{' body return . '}'

    '}'  shift, and go to state 54


state 38

   20 body: statement ';' .

    $default  reduce using rule 20 (body)


state 39

   25 body: PRINTFF @7 '(' . STR ')' ';'

    STR  shift, and go to state 55


state 40

   23 body: SCANFF @6 '(' . STR ',' '&' ID ')' ';'

    STR  shift, and go to state 56


state 41

   15 body: FOR @2 '(' . statement ';' condition ';' statement ')' '{' body '}'

    VOID   shift, and go to state 6
    INT    shift, and go to state 7
    FLOAT  shift, and go to state 8
    CHAR   shift, and go to state 9
    ID     shift, and go to state 21
    UNARY  shift, and go to state 22

    datatype   go to state 23
    statement  go to state 57


state 42

   19 body: IF @3 '(' . condition ')' @4 '{' body '}' @5 else

    CHARACTER  shift, and go to state 58
    TRUE       shift, and go to state 59
    FALSE      shift, and go to state 60
    NUMBER     shift, and go to state 61
    FLOAT_NUM  shift, and go to state 62
    ID         shift, and go to state 63

    $default  reduce using rule 13 (condition)

    condition  go to state 64
    value      go to state 65


state 43

   32 statement: ID @10 '=' . expression

    CHARACTER  shift, and go to state 58
    NUMBER     shift, and go to state 61
    FLOAT_NUM  shift, and go to state 62
    ID         shift, and go to state 63

    expression  go to state 66
    value       go to state 67


state 44

   47 relop: LE .

    $default  reduce using rule 47 (relop)


state 45

   48 relop: GE .

    $default  reduce using rule 48 (relop)


state 46

   49 relop: EQ .

    $default  reduce using rule 49 (relop)


state 47

   50 relop: NE .

    $default  reduce using rule 50 (relop)


state 48

   46 relop: GT .

    $default  reduce using rule 46 (relop)


state 49

   45 relop: LT .

    $default  reduce using rule 45 (relop)


state 50

   34 statement: ID @11 relop . expression

    CHARACTER  shift, and go to state 58
    NUMBER     shift, and go to state 61
    FLOAT_NUM  shift, and go to state 62
    ID         shift, and go to state 63

    expression  go to state 68
    value       go to state 67


state 51

   36 statement: ID @12 UNARY .

    $default  reduce using rule 36 (statement)


state 52

   30 statement: datatype ID @9 . init

    '='  shift, and go to state 69

    $default  reduce using rule 39 (init)

    init  go to state 70


state 53

   43 return: RETURN @13 . value ';'

    CHARACTER  shift, and go to state 58
    NUMBER     shift, and go to state 61
    FLOAT_NUM  shift, and go to state 62
    ID         shift, and go to state 63

    value  go to state 71


state 54

    1 program: headers main '(' ')' '{' body return '}' .

    $default  reduce using rule 1 (program)


state 55

   25 body: PRINTFF @7 '(' STR . ')' ';'

    ')'  shift, and go to state 72


state 56

   23 body: SCANFF @6 '(' STR . ',' '&' ID ')' ';'

    ','  shift, and go to state 73


state 57

   15 body: FOR @2 '(' statement . ';' condition ';' statement ')' '{' body '}'

    ';'  shift, and go to state 74


state 58

   57 value: CHARACTER .

    $default  reduce using rule 57 (value)


state 59

   11 condition: TRUE .

    $default  reduce using rule 11 (condition)


state 60

   12 condition: FALSE .

    $default  reduce using rule 12 (condition)


state 61

   55 value: NUMBER .

    $default  reduce using rule 55 (value)


state 62

   56 value: FLOAT_NUM .

    $default  reduce using rule 56 (value)


state 63

   58 value: ID .

    $default  reduce using rule 58 (value)


state 64

   19 body: IF @3 '(' condition . ')' @4 '{' body '}' @5 else

    ')'  shift, and go to state 75


state 65

   10 condition: value . relop value

    LE  shift, and go to state 44
    GE  shift, and go to state 45
    EQ  shift, and go to state 46
    NE  shift, and go to state 47
    GT  shift, and go to state 48
    LT  shift, and go to state 49

    relop  go to state 76


state 66

   32 statement: ID @10 '=' expression .
   40 expression: expression . arithmetic expression

    ADD       shift, and go to state 77
    MULTIPLY  shift, and go to state 78
    DIVIDE    shift, and go to state 79
    SUBTRACT  shift, and go to state 80

    $default  reduce using rule 32 (statement)

    arithmetic  go to state 81


state 67

   41 expression: value .

    $default  reduce using rule 41 (expression)


state 68

   34 statement: ID @11 relop expression .
   40 expression: expression . arithmetic expression

    ADD       shift, and go to state 77
    MULTIPLY  shift, and go to state 78
    DIVIDE    shift, and go to state 79
    SUBTRACT  shift, and go to state 80

    $default  reduce using rule 34 (statement)

    arithmetic  go to state 81


state 69

   38 init: '=' . value

    CHARACTER  shift, and go to state 58
    NUMBER     shift, and go to state 61
    FLOAT_NUM  shift, and go to state 62
    ID         shift, and go to state 63

    value  go to state 82


state 70

   30 statement: datatype ID @9 init .

    $default  reduce using rule 30 (statement)


state 71

   43 return: RETURN @13 value . ';'

    ';'  shift, and go to state 83


state 72

   25 body: PRINTFF @7 '(' STR ')' . ';'

    ';'  shift, and go to state 84


state 73

   23 body: SCANFF @6 '(' STR ',' . '&' ID ')' ';'

    '&'  shift, and go to state 85


state 74

   15 body: FOR @2 '(' statement ';' . condition ';' statement ')' '{' body '}'

    CHARACTER  shift, and go to state 58
    TRUE       shift, and go to state 59
    FALSE      shift, and go to state 60
    NUMBER     shift, and go to state 61
    FLOAT_NUM  shift, and go to state 62
    ID         shift, and go to state 63

    $default  reduce using rule 13 (condition)

    condition  go to state 86
    value      go to state 65


state 75

   19 body: IF @3 '(' condition ')' . @4 '{' body '}' @5 else

    $default  reduce using rule 17 (@4)

    @4  go to state 87


state 76

   10 condition: value relop . value

    CHARACTER  shift, and go to state 58
    NUMBER     shift, and go to state 61
    FLOAT_NUM  shift, and go to state 62
    ID         shift, and go to state 63

    value  go to state 88


state 77

   51 arithmetic: ADD .

    $default  reduce using rule 51 (arithmetic)


state 78

   53 arithmetic: MULTIPLY .

    $default  reduce using rule 53 (arithmetic)


state 79

   54 arithmetic: DIVIDE .

    $default  reduce using rule 54 (arithmetic)


state 80

   52 arithmetic: SUBTRACT .

    $default  reduce using rule 52 (arithmetic)


state 81

   40 expression: expression arithmetic . expression

    CHARACTER  shift, and go to state 58
    NUMBER     shift, and go to state 61
    FLOAT_NUM  shift, and go to state 62
    ID         shift, and go to state 63

    expression  go to state 89
    value       go to state 67


state 82

   38 init: '=' value .

    $default  reduce using rule 38 (init)


state 83

   43 return: RETURN @13 value ';' .

    $default  reduce using rule 43 (return)


state 84

   25 body: PRINTFF @7 '(' STR ')' ';' .

    $default  reduce using rule 25 (body)


state 85

   23 body: SCANFF @6 '(' STR ',' '&' . ID ')' ';'

    ID  shift, and go to state 90


state 86

   15 body: FOR @2 '(' statement ';' condition . ';' statement ')' '{' body '}'

    ';'  shift, and go to state 91


state 87

   19 body: IF @3 '(' condition ')' @4 . '{' body '}' @5 else

    '{'  shift, and go to state 92


state 88

   10 condition: value relop value .

    $default  reduce using rule 10 (condition)


state 89

   40 expression: expression . arithmetic expression
   40           | expression arithmetic expression .

    ADD       shift, and go to state 77
    MULTIPLY  shift, and go to state 78
    DIVIDE    shift, and go to state 79
    SUBTRACT  shift, and go to state 80

    ADD       [reduce using rule 40 (expression)]
    MULTIPLY  [reduce using rule 40 (expression)]
    DIVIDE    [reduce using rule 40 (expression)]
    SUBTRACT  [reduce using rule 40 (expression)]
    $default  reduce using rule 40 (expression)

    arithmetic  go to state 81


state 90

   23 body: SCANFF @6 '(' STR ',' '&' ID . ')' ';'

    ')'  shift, and go to state 93


state 91

   15 body: FOR @2 '(' statement ';' condition ';' . statement ')' '{' body '}'

    VOID   shift, and go to state 6
    INT    shift, and go to state 7
    FLOAT  shift, and go to state 8
    CHAR   shift, and go to state 9
    ID     shift, and go to state 21
    UNARY  shift, and go to state 22

    datatype   go to state 23
    statement  go to state 94


state 92

   19 body: IF @3 '(' condition ')' @4 '{' . body '}' @5 else

    VOID     shift, and go to state 6
    PRINTFF  shift, and go to state 17
    SCANFF   shift, and go to state 18
    INT      shift, and go to state 7
    FLOAT    shift, and go to state 8
    CHAR     shift, and go to state 9
    FOR      shift, and go to state 19
    IF       shift, and go to state 20
    ID       shift, and go to state 21
    UNARY    shift, and go to state 22

    datatype   go to state 23
    body       go to state 95
    statement  go to state 25


state 93

   23 body: SCANFF @6 '(' STR ',' '&' ID ')' . ';'

    ';'  shift, and go to state 96


state 94

   15 body: FOR @2 '(' statement ';' condition ';' statement . ')' '{' body '}'

    ')'  shift, and go to state 97


state 95

   19 body: IF @3 '(' condition ')' @4 '{' body . '}' @5 else
   21     | body . body

    VOID     shift, and go to state 6
    PRINTFF  shift, and go to state 17
    SCANFF   shift, and go to state 18
    INT      shift, and go to state 7
    FLOAT    shift, and go to state 8
    CHAR     shift, and go to state 9
    FOR      shift, and go to state 19
    IF       shift, and go to state 20
    ID       shift, and go to state 21
    UNARY    shift, and go to state 22
    '}'      shift, and go to state 98

    datatype   go to state 23
    body       go to state 36
    statement  go to state 25


state 96

   23 body: SCANFF @6 '(' STR ',' '&' ID ')' ';' .

    $default  reduce using rule 23 (body)


state 97

   15 body: FOR @2 '(' statement ';' condition ';' statement ')' . '{' body '}'

    '{'  shift, and go to state 99


state 98

   19 body: IF @3 '(' condition ')' @4 '{' body '}' . @5 else

    $default  reduce using rule 18 (@5)

    @5  go to state 100


state 99

   15 body: FOR @2 '(' statement ';' condition ';' statement ')' '{' . body '}'

    VOID     shift, and go to state 6
    PRINTFF  shift, and go to state 17
    SCANFF   shift, and go to state 18
    INT      shift, and go to state 7
    FLOAT    shift, and go to state 8
    CHAR     shift, and go to state 9
    FOR      shift, and go to state 19
    IF       shift, and go to state 20
    ID       shift, and go to state 21
    UNARY    shift, and go to state 22

    datatype   go to state 23
    body       go to state 101
    statement  go to state 25


state 100

   19 body: IF @3 '(' condition ')' @4 '{' body '}' @5 . else

    ELSE  shift, and go to state 102

    $default  reduce using rule 28 (else)

    else  go to state 103


state 101

   15 body: FOR @2 '(' statement ';' condition ';' statement ')' '{' body . '}'
   21     | body . body

    VOID     shift, and go to state 6
    PRINTFF  shift, and go to state 17
    SCANFF   shift, and go to state 18
    INT      shift, and go to state 7
    FLOAT    shift, and go to state 8
    CHAR     shift, and go to state 9
    FOR      shift, and go to state 19
    IF       shift, and go to state 20
    ID       shift, and go to state 21
    UNARY    shift, and go to state 22
    '}'      shift, and go to state 104

    datatype   go to state 23
    body       go to state 36
    statement  go to state 25


state 102

   27 else: ELSE . @8 '{' body '}'

    $default  reduce using rule 26 (@8)

    @8  go to state 105


state 103

   19 body: IF @3 '(' condition ')' @4 '{' body '}' @5 else .

    $default  reduce using rule 19 (body)


state 104

   15 body: FOR @2 '(' statement ';' condition ';' statement ')' '{' body '}' .

    $default  reduce using rule 15 (body)


state 105

   27 else: ELSE @8 . '{' body '}'

    '{'  shift, and go to state 106


state 106

   27 else: ELSE @8 '{' . body '}'

    VOID     shift, and go to state 6
    PRINTFF  shift, and go to state 17
    SCANFF   shift, and go to state 18
    INT      shift, and go to state 7
    FLOAT    shift, and go to state 8
    CHAR     shift, and go to state 9
    FOR      shift, and go to state 19
    IF       shift, and go to state 20
    ID       shift, and go to state 21
    UNARY    shift, and go to state 22

    datatype   go to state 23
    body       go to state 107
    statement  go to state 25


state 107

   21 body: body . body
   27 else: ELSE @8 '{' body . '}'

    VOID     shift, and go to state 6
    PRINTFF  shift, and go to state 17
    SCANFF   shift, and go to state 18
    INT      shift, and go to state 7
    FLOAT    shift, and go to state 8
    CHAR     shift, and go to state 9
    FOR      shift, and go to state 19
    IF       shift, and go to state 20
    ID       shift, and go to state 21
    UNARY    shift, and go to state 22
    '}'      shift, and go to state 108

    datatype   go to state 23
    body       go to state 36
    statement  go to state 25


state 108

   27 else: ELSE @8 '{' body '}' .

    $default  reduce using rule 27 (else)
